import apiClient from './apiClient';

/**
 * =================================================================
 * ðŸ‘¤ Customer API - Endpoints dÃ nh riÃªng cho vai trÃ² CUSTOMER
 * =================================================================
 * - Sá»­ dá»¥ng apiClient Ä‘á»ƒ cÃ³ tÃ­nh nÄƒng tá»± Ä‘á»™ng refresh token.
 * - TuÃ¢n thá»§ theo cÃ¡c quy táº¯c trong API Guide.
 */

export const customerApi = {
  /**
   * Láº¥y danh sÃ¡ch cÃ¡c yÃªu cáº§u báº£o hÃ nh cá»§a khÃ¡ch hÃ ng Ä‘ang Ä‘Äƒng nháº­p.
   * Endpoint: GET /api/warranty-claims/my-claims
   * @param {object} params - CÃ¡c tham sá»‘ truy váº¥n (vÃ­ dá»¥: page, size, sort).
   * @returns {Promise<object>} Dá»¯ liá»‡u phÃ¢n trang cá»§a cÃ¡c yÃªu cáº§u báº£o hÃ nh.
   */
  getMyWarrantyClaims: (params = {}) => {
    const queryParams = new URLSearchParams(params).toString();
    return apiClient(`/api/warranty-claims/my-claims?${queryParams}`);
  },

  /**
   * Láº¥y chi tiáº¿t má»™t yÃªu cáº§u báº£o hÃ nh cá»¥ thá»ƒ cá»§a khÃ¡ch hÃ ng Ä‘ang Ä‘Äƒng nháº­p.
   * Endpoint: GET /api/warranty-claims/my-claims/{id}
   * @param {number} id - ID cá»§a yÃªu cáº§u báº£o hÃ nh.
   * @returns {Promise<object>} Chi tiáº¿t yÃªu cáº§u báº£o hÃ nh.
   */
  getMyWarrantyClaimById: (id) => {
    return apiClient(`/api/warranty-claims/my-claims/${id}`);
  },

  /**
   * Láº¥y danh sÃ¡ch cÃ¡c xe cá»§a khÃ¡ch hÃ ng Ä‘ang Ä‘Äƒng nháº­p.
   * Endpoint: GET /api/vehicles/my-vehicles
   * @param {object} params - CÃ¡c tham sá»‘ truy váº¥n.
   * @returns {Promise<object>} Dá»¯ liá»‡u phÃ¢n trang cá»§a cÃ¡c xe.
   */
  getMyVehicles: (params = {}) => {
    const queryParams = new URLSearchParams(params).toString();
    return apiClient(`/api/vehicles/my-vehicles?${queryParams}`);
  },

  /**
   * Láº¥y lá»‹ch sá»­ dá»‹ch vá»¥ cho cÃ¡c xe cá»§a khÃ¡ch hÃ ng Ä‘ang Ä‘Äƒng nháº­p.
   * Endpoint: GET /api/service-histories/my-services
   * @param {object} params - CÃ¡c tham sá»‘ truy váº¥n.
   * @returns {Promise<object>} Dá»¯ liá»‡u phÃ¢n trang cá»§a lá»‹ch sá»­ dá»‹ch vá»¥.
   */
  getMyServiceHistories: (params = {}) => {
    const queryParams = new URLSearchParams(params).toString();
    return apiClient(`/api/service-histories/my-services?${queryParams}`);
  },
  
  /**
   * Cáº­p nháº­t thÃ´ng tin há»“ sÆ¡ cá»§a khÃ¡ch hÃ ng Ä‘ang Ä‘Äƒng nháº­p.
   * Endpoint: PUT /api/customers/profile (Hoáº·c má»™t endpoint tÆ°Æ¡ng tá»± nhÆ° /api/me)
   * @param {object} profileData - Dá»¯ liá»‡u há»“ sÆ¡ cáº§n cáº­p nháº­t.
   * @returns {Promise<object>} Há»“ sÆ¡ Ä‘Ã£ Ä‘Æ°á»£c cáº­p nháº­t.
   */
  updateMyProfile: (profileData) => {
    return apiClient('/api/customers/profile', { // Giáº£ Ä‘á»‹nh endpoint, cáº§n xÃ¡c nháº­n láº¡i tá»« BE
      method: 'PUT',
      body: JSON.stringify(profileData),
    });
  },

  /**
   * Láº¥y danh sÃ¡ch pháº£n há»“i cá»§a khÃ¡ch hÃ ng Ä‘ang Ä‘Äƒng nháº­p.
   * Endpoint: GET /api/feedbacks/by-customer/{customerId}
   * @param {number} customerId - ID cá»§a khÃ¡ch hÃ ng.
   * @param {object} params - CÃ¡c tham sá»‘ truy váº¥n.
   * @returns {Promise<object>} Dá»¯ liá»‡u phÃ¢n trang cá»§a cÃ¡c pháº£n há»“i.
   */
  getMyFeedbacks: (customerId, params = {}) => {
    const queryParams = new URLSearchParams(params).toString();
    return apiClient(`/api/feedbacks/by-customer/${customerId}?${queryParams}`);
  },

  /**
   * Táº¡o pháº£n há»“i má»›i.
   * Endpoint: POST /api/feedbacks
   * @param {object} feedbackData - Dá»¯ liá»‡u pháº£n há»“i (warrantyClaimId, rating, comments).
   * @returns {Promise<object>} Pháº£n há»“i Ä‘Ã£ táº¡o.
   */
  createFeedback: (feedbackData) => {
    return apiClient('/api/feedbacks', {
      method: 'POST',
      body: JSON.stringify(feedbackData),
    });
  },

  /**
   * Láº¥y chi tiáº¿t pháº£n há»“i.
   * Endpoint: GET /api/feedbacks/{id}
   * @param {number} id - ID cá»§a pháº£n há»“i.
   * @returns {Promise<object>} Chi tiáº¿t pháº£n há»“i.
   */
  getFeedbackById: (id) => {
    return apiClient(`/api/feedbacks/${id}`);
  },

  /**
   * Cáº­p nháº­t pháº£n há»“i.
   * Endpoint: PUT /api/feedbacks/{id}
   * @param {number} id - ID cá»§a pháº£n há»“i.
   * @param {object} feedbackData - Dá»¯ liá»‡u pháº£n há»“i cáº§n cáº­p nháº­t.
   * @returns {Promise<object>} Pháº£n há»“i Ä‘Ã£ cáº­p nháº­t.
   */
  updateFeedback: (id, feedbackData) => {
    return apiClient(`/api/feedbacks/${id}`, {
      method: 'PUT',
      body: JSON.stringify(feedbackData),
    });
  },

  /**
   * XÃ³a pháº£n há»“i.
   * Endpoint: DELETE /api/feedbacks/{id}
   * @param {number} id - ID cá»§a pháº£n há»“i.
   * @returns {Promise<void>}
   */
  deleteFeedback: (id) => {
    return apiClient(`/api/feedbacks/${id}`, {
      method: 'DELETE',
    });
  },

  /**
   * Láº¥y pháº£n há»“i theo yÃªu cáº§u báº£o hÃ nh.
   * Endpoint: GET /api/feedbacks/by-claim/{claimId}
   * @param {number} claimId - ID cá»§a yÃªu cáº§u báº£o hÃ nh.
   * @returns {Promise<object>} Pháº£n há»“i cho yÃªu cáº§u báº£o hÃ nh.
   */
  getFeedbackByClaim: (claimId) => {
    return apiClient(`/api/feedbacks/by-claim/${claimId}`);
  },
};

export default customerApi;
