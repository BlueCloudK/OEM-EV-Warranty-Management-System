package com.swp391.warrantymanagement.mapper;

import com.swp391.warrantymanagement.dto.request.PartRequestDTO;
import com.swp391.warrantymanagement.dto.response.PartResponseDTO;
import com.swp391.warrantymanagement.entity.Part;

import java.util.List;
import java.util.stream.Collectors;

/**
 * PartMapper - Converts between Part Entity and DTOs
 * Handles standalone part information (NO vehicle associations)
 */
public final class PartMapper {
    private PartMapper() {}

    // Request DTO -> Entity (for create operations)
    // partId is auto-generated, no need to set it
    public static Part toEntity(PartRequestDTO requestDTO) {
        if (requestDTO == null) return null;

        Part entity = new Part();
        // partId is auto-generated by database
        entity.setPartName(requestDTO.getPartName());
        entity.setPartNumber(requestDTO.getPartNumber());
        entity.setManufacturer(requestDTO.getManufacturer());
        entity.setPrice(requestDTO.getPrice());

        return entity;
    }

    // Update existing entity from request DTO
    public static void updateEntity(Part entity, PartRequestDTO requestDTO) {
        if (entity == null || requestDTO == null) return;

        // Don't update partId (primary key)
        entity.setPartName(requestDTO.getPartName());
        entity.setPartNumber(requestDTO.getPartNumber());
        entity.setManufacturer(requestDTO.getManufacturer());
        entity.setPrice(requestDTO.getPrice());
    }

    // Entity -> Response DTO (for API response)
    public static PartResponseDTO toResponseDTO(Part entity) {
        if (entity == null) return null;

        PartResponseDTO responseDTO = new PartResponseDTO();
        responseDTO.setPartId(entity.getPartId());
        responseDTO.setPartName(entity.getPartName());
        responseDTO.setPartNumber(entity.getPartNumber());
        responseDTO.setManufacturer(entity.getManufacturer());
        responseDTO.setPrice(entity.getPrice());

        return responseDTO;
    }

    // List Entity -> List Response DTO
    public static List<PartResponseDTO> toResponseDTOList(List<Part> entities) {
        if (entities == null) return null;
        return entities.stream()
                .map(PartMapper::toResponseDTO)
                .collect(Collectors.toList());
    }
}
